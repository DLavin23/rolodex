// Layout
// ========================================

// Image replacement

.ir
  color: transparent
  font: 0/0 a
  text-shadow: none

// Borders

%border-gray-light
  border-color: $gray-light

%border-1
  +rem(border-width, 1px)

%border-solid
  border-style: solid

%border-base
  @extend %border-gray-light
  @extend %border-1
  @extend %border-solid

@each $radius, $i in $radii
  %border-radius-#{$radius}
    +rem(border-radius, $i)

%border-radius-circle
  border-radius: 50%
  
// Box overlay

.box-overlay
  @extend %background-white
  border-color: $blue
  @extend %border-1
  @extend %border-solid
  @extend %border-radius-base
  +rem(box-shadow, 0 0 0 4px rgba($black, .06))

// Alignments

@each $align in $alignments
  %vertical-align-#{$align}
    vertical-align: $align

// Displays

@each $display in $displays
  .display-#{$display}
    display: $display

// Floats

@each $float in $floats
  .pull-#{$float}
    float: $float

// Overflows

@each $overflow in $overflows
  %overflow-#{$overflow}
    overflow: $overflow

// Positions

@each $position in $positions
  .position-#{$position}
    position: $position

// Clearfix

.group
  &:before,
  &:after
    @extend %content-empty
    @extend .display-table
  &:after
    clear: both

// Centering
// ========================================

%left-50
  left: 50%

%right-50
  top: 50%

%center-x
  @extend %left-50
  transform: translateX(-50%)

%center-y
  @extend %right-50
  transform: translateY(-50%)

%center-xy
  @extend %left-50, %right-50
  transform: translateX(-50%) translateY(-50%)

// Box models
// ========================================

@each $zero in $zeros
  .#{$zero}-0
    #{$zero}: 0

.margin-auto
  margin: 0 auto

// Baseline surgical classes
// ========================================

@each $baseline, $i in $baselines

  %line-height-#{$baseline}
    +rem(line-height, $i)
    
  @if $baseline == base

    .margin-bottom
      +rem(margin-bottom, $i)

    .margin-top
      +rem(margin-top, $i)

    .padding-bottom
      +rem(padding-bottom, $i)

    .padding-top
      +rem(padding-top, $i)

  @else

    .margin-bottom-#{$baseline}
      +rem(margin-bottom, $i)

    .margin-top-#{$baseline}
      +rem(margin-top, $i)

    .padding-bottom-#{$baseline}
      +rem(padding-bottom, $i)

    .padding-top-#{$baseline}
      +rem(padding-top, $i)

// Gutter surgical classes
// ========================================

@each $gutter, $i in $gutters
  @if $gutter == base

    .margin-left
      +rem(margin-left, $i)

    .margin-right
      +rem(margin-right, $i)

    .padding-left
      +rem(padding-left, $i)

    .padding-right
      +rem(padding-right, $i)

  @else

    .margin-left-#{$gutter}
      +rem(margin-left, $i)

    .margin-right-#{$gutter}
      +rem(margin-right, $i)

    .padding-left-#{$gutter}
      +rem(padding-left, $i)

    .padding-right-#{$gutter}
      +rem(padding-right, $i)

// Full boxes
// ========================================

.padding-gutters
  @extend .padding-left
  @extend .padding-right

.padding-gutters-half
  @extend .padding-left-half
  @extend .padding-right-half
  
.padding-baselines
  @extend .padding-bottom
  @extend .padding-top

.padding-box
  @extend .padding-gutters
  @extend .padding-baselines

.margin-gutters
  @extend .margin-left
  @extend .margin-right

.margin-gutters-half
  @extend .margin-left-half
  @extend .margin-right-half
  
.margin-baselines
  @extend .margin-bottom
  @extend .margin-top

.margin-box
  @extend .margin-gutters
  @extend .margin-baselines

// Grid system
// ========================================

.grid
  @extend .list-none
  +rem(letter-spacing, -4px)

.opera:-o-prefocus,
.grid
  +rem(word-spacing, -5px)

.grid-col
  @extend .display-inline-block
  vertical-align: top
  letter-spacing: normal
  word-spacing: normal
  *display: inline
  zoom: 1

// Grid widths
// ========================================

$columns: 12

// Counting down from 12, for 12 columns
@while 1 <= $columns
  
  // Counting up to the given potential number of columns in a given row
  @for $column from 1 to $columns
  
    // Extend multiples of 2, 3, 5, or compile the class
    @if ($column % 2 == 0) and ($columns % 2 == 0)
    
      .grid-#{$column}-#{$columns}
        @extend .grid-#{$column/2}-#{$columns/2}
    
    @else if ($column % 3 == 0) and ($columns % 3 == 0)
    
      .grid-#{$column}-#{$columns}
        @extend .grid-#{$column/3}-#{$columns/3}

    @else if ($column % 5 == 0) and ($columns % 5 == 0)
    
      .grid-#{$column}-#{$columns}
        @extend .grid-#{$column/5}-#{$columns/5}
        
    @else
  
      .grid-#{$column}-#{$columns}
        width: ($column/$columns) * 100%
    
  $columns: $columns - 1

.grid-1-1
  width: 100%
